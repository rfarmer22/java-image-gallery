/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.au.cc.gallery.ui;

import java.util.*;
import javax.servlet.MultipartConfigElement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.io.InputStream;

import static spark.Spark.*;
import spark.ModelAndView;
import spark.Request;
import spark.Response;

import spark.template.handlebars.HandlebarsTemplateEngine;

import edu.au.cc.gallery.data.*;
import edu.au.cc.gallery.aws.*;

public class App {

	private String bucketName = "edu.au.cc.image-gallery";

	private static UserImageDAO getUserImageDAO() throws Exception {
                return GenerateUserImageDAO.getUserImageDAO();
        }

	public static String addImage(Request req, Response res) {
		Map<String, Object> model = new HashMap<String, Object>();
		String username = req.session().attribute("user");
		model.put("username", username);
		return new HandlebarsTemplateEngine()
                        .render(new ModelAndView(model, "addimage.hbs"));
	}

	public static String postAddImage(Request req, Response res) {
		try {
                 	String username = req.session().attribute("user");
			User user = Admin.getUserDAO().getUserByUsername(username);
			String uuid = UUID.randomUUID().toString();

			req.attribute("org.eclipse.jetty.multipartConfig", new MultipartConfigElement("/temp"));
                        InputStream is = req.raw().getPart("uploaded_image").getInputStream();
			byte[] imageFileName = is.readAllBytes();
           		String imageFileNameToString = new String(Base64.getEncoder().encodeToString(imageFileName));
			Image image = new Image(user, imageFileNameToString, uuid);

			getUserImageDAO().addImageDB(user, image);
			getUserImageDAO().addImageS3(user, image);
		} catch (Exception e) {
			return "Error in postAddImage: " + e.toString();
		}
			res.redirect("/");
			return "";
		}

	public static String viewImages(Request req, Response res) {
		Map<String, Object> model = new HashMap<String, Object>();
                String username = req.session().attribute("user");
		model.put("username", username);
                return new HandlebarsTemplateEngine()
                        .render(new ModelAndView(model, "viewimages.hbs"));
	}

    	public static void main(String[] args) throws Exception {
		String portString = System.getenv("JETTY_PORT");
           		if (portString == null || portString.equals("")) {
             		port(5000);
          	}  else {
           		port(Integer.parseInt(portString));
	  	}

//		Routes.connectToDatabase();
//		new Routes().addRoutes();
		new Admin().addRoutes();
//		DB db = new DB();
		//UserAdmin.main(null);
//		DB.demo();
    }
}
