/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.4.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

run {

standardInput = System.in

}

task printRuntimeClasspath {
    def runtimeClasspath = sourceSets.main.runtimeClasspath
    inputs.files( runtimeClasspath )
    doLast {
        println runtimeClasspath.join( File.pathSeparator )
    }
}

dependencies {
    implementation platform('software.amazon.awssdk:bom:2.13.20')
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:secretsmanager'
    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20200518'

    implementation group: 'com.sparkjava', name: 'spark-core', version: '2.8.0'

    implementation group: 'com.sparkjava', name: 'spark-template-handlebars', version: '2.7.1'

    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21'


    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.12'

    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

application {
    // Define the main class for the application.
    mainClassName = 'edu.au.cc.gallery.App'
}

task deploy(type:Exec) {
  dependsOn tasks.build
  
  workingDir '.'

  //on linux
  commandLine './deploy.sh'

  //store the output instead of printing to the console:
  standardOutput = new ByteArrayOutputStream()

  //extension method stopTomcat.output() can be used to obtain the output:
  ext.output = {
    return standardOutput.toString()
  }
}
